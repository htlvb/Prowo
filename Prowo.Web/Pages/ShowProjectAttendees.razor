@page "/projects/attendees/{ProjectId}"

@using Prowo.Web.Data

@inject ProjectStore ProjectStore

@attribute [Authorize(Roles = "Report.Create")]

@if (project == null)
{
    <h2 class="text-2xl">Teilnehmerliste</h2>
    <p><em>Projekt wird geladen...</em></p>
}
else
{
    <h2 class="text-2xl pb-2">Teilnehmerliste "@project.Title"</h2>
    <span class="inline-block pb-4 text-sm text-gray-600">@project.Date.ToLongDateString(), @project.StartTime @if (project.EndTime.HasValue) { <span> - @project.EndTime</span> }</span>
    <table>
        <thead>
            <tr>
                <th>Klasse</th>
                <th>Nachname</th>
                <th>Vorname</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var attendee in project.Attendees)
            {
                <tr>
                    <td>@attendee.Class</td>
                    <td>@attendee.LastName</td>
                    <td>@attendee.FirstName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string? ProjectId { get; set; }

    private UIProject project;

    protected override async Task OnInitializedAsync()
    {
        var p = await ProjectStore.Get(ProjectId);
        var attendees = p.Attendees
            .OrderBy(v => v.Class)
            .ThenBy(v => v.LastName)
            .ThenBy(v => v.FirstName)
            .ToList();
        project = new UIProject(p.Title, p.Date, p.StartTime, p.EndTime, attendees);
    }

    public record UIProject(
        string Title,
        DateOnly Date,
        TimeOnly StartTime,
        TimeOnly? EndTime,
        IReadOnlyList<ProjectAttendee> Attendees);
}
